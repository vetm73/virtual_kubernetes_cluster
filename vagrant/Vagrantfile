domain   = 'local'

# use two digits id below, please
nodes = [
  { :hostname => 'test1', :id => '01' },
#  { :hostname => 'test2', :id => '02' },
]

memory = 1024

$script = <<SCRIPT
#sudo mv hosts /etc/hosts
#chmod 0600 /home/vagrant/.ssh/id_rsa
#usermod -a -G vagrant ubuntu
#cp -Rvf /home/vagrant/.ssh /home/ubuntu
#chown -Rvf ubuntu /home/ubuntu
#apt-get -y update
#apt-get -y install python-minimal python-apt
cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
rm -f /home/vagrant/.ssh/id_rsa.pub
SCRIPT

Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  nodes.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      nodeconfig.vm.box = "hashicorp/precise64"
      nodeconfig.vm.hostname = node[:hostname]
      nodeconfig.vm.network "public_network"
      # , type: "dhcp"
      nodeconfig.vm.provider :vmware_fusion do |vb|
        vb.gui = false
        vb.vmx["ethernet0.pcislotnumber"] = "32"
        vb.name = node[:hostname]+"."+domain
        vb.memory = memory
        vb.cpus = 1
#        vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
#        vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
#        vb.customize ['modifyvm', :id, '--macaddress1', "5CA1AB1E00"+node[:id]]
#        vb.customize ['modifyvm', :id, '--natnet1', "192.168/16"]
        vb.vmx["ethernet1.generatedAddress"] = nil
        vb.vmx["ethernet1.addressType"] = "static"
        vb.vmx["ethernet1.address"] = "5c:a1:ab:1e:00:"+node[:id]
      end
#      nodeconfig.vm.provision "file", source: "hosts", destination: "hosts"
#      nodeconfig.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "/home/vagrant/.ssh/id_rsa"
      nodeconfig.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
      nodeconfig.vm.provision "shell", inline: $script
    end
  end
  config.vm.provider "vmware_fusion"

end
